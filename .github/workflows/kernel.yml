name: Build Ubuntu Kernels and Release

on:
  push:
    branches:
      - linux-6.8.y
  pull_request:
    types:
      - closed
    branches:
      - linux-6.8.y

jobs:
  build-kernel-2404:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    runs-on: depot-ubuntu-24.04-64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up caching
      - name: Cache kernel build
        uses: actions/cache@v4
        id: kernel-cache
        with:
          path: |
            kernel-build
            config
          key: kernel-build-${{ runner.os }}-${{ hashFiles('config') }}-${{ github.run_id }}
          restore-keys: |
            kernel-build-${{ runner.os }}-${{ hashFiles('config') }}-
            kernel-build-${{ runner.os }}-

      - name: Install build dependencies
        run: |
          sudo sh -c 'echo "deb-src http://archive.ubuntu.com/ubuntu noble main" > /etc/apt/sources.list.d/kernel-source.list'
          sudo sh -c 'echo "deb-src http://archive.ubuntu.com/ubuntu noble-updates main" >> /etc/apt/sources.list.d/kernel-source.list'
          sudo apt-get update
          sudo apt build-dep -y linux
          sudo apt-get install -y git build-essential fakeroot libncurses-dev gawk flex bison openssl libssl-dev dkms libelf-dev libudev-dev libpci-dev libiberty-dev autoconf llvm bc gcc python3 kmod cpio wget rsync

      - name: Get kernel source
        if: steps.kernel-cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p kernel-build
          cd kernel-build
          apt-get source linux
          KERNEL_SRC=$(find "$PWD" -maxdepth 1 -type d -name "linux-*" | head -1)
          echo "KERNEL_SRC=${KERNEL_SRC}" >> $GITHUB_ENV
          ln -sf "$KERNEL_SRC" "$PWD/linux-source"
          echo "KERNEL_SOURCE=$PWD/linux-source" >> $GITHUB_ENV

      - name: Set kernel source path from cache
        if: steps.kernel-cache.outputs.cache-hit == 'true'
        run: |
          KERNEL_SRC=$(find "$PWD/kernel-build" -maxdepth 1 -type d -name "linux-*" | head -1)
          echo "KERNEL_SRC=${KERNEL_SRC}" >> $GITHUB_ENV
          echo "KERNEL_SOURCE=$PWD/kernel-build/linux-source" >> $GITHUB_ENV

      - name: Copy config
        run: |
          cp config "$KERNEL_SOURCE/.config"
          echo "Using custom .config file"

      - name: Prepare build environment
        run: |
          cd "$KERNEL_SOURCE"
          chmod a+x debian/rules || true
          chmod a+x debian/scripts/* || true
          chmod a+x debian/scripts/misc/* || true

      - name: Set commit hash
        run: |
          SHORT_COMMIT=$(echo ${{ github.sha }} | cut -c 1-8)
          echo "SHORT_COMMIT=$SHORT_COMMIT" >> $GITHUB_ENV

      # Build kernel with the new approach
      - name: Build kernel
        run: |
          cd "$KERNEL_SOURCE"
          make -j "$(nproc)"
          make -j "$(nproc)" bindeb-pkg LOCALVERSION=-depot-${{ env.SHORT_COMMIT }}

      # Collect and organize .deb files
      - name: Collect .deb files
        run: |
          mkdir -p artifacts
          # Find all .deb files in the parent directory of the kernel source
          find "$(dirname "$KERNEL_SOURCE")" -maxdepth 1 -name "*.deb" -exec cp {} artifacts/ \;
          # Also look one directory up (for deb-pkg output)
          find "$(dirname "$(dirname "$KERNEL_SOURCE")")" -maxdepth 1 -name "*.deb" -exec cp {} artifacts/ \;
          ls -la artifacts/

      - name: Upload .deb files as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: kernel-debs
          path: artifacts/*.deb

      - name: Create Release
        if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: kernel-${{ github.sha }}
          name: Ubuntu Kernel Build ${{ github.sha }}
          files: artifacts/*.deb
          draft: false
          prerelease: false
          generate_release_notes: true
          body: |
            Ubuntu 24.04 kernel build with commit ${{ github.sha }}

            This release was automatically generated by the GitHub Actions workflow.
            Includes kernel .deb packages with LOCALVERSION set to depot-${{ env.SHORT_COMMIT }}.
